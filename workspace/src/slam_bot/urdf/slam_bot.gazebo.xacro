<?xml version="1.0"?>
<robot>

  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
	<alwaysOn>true</alwaysOn>
        <updateRate>100.0</updateRate>
        <robotNamespace>/</robotNamespace>
        <leftFrontJoint>joint_wheel_FL</leftFrontJoint>
        <rightFrontJoint>joint_wheel_FR</rightFrontJoint>
        <leftRearJoint>joint_wheel_BL</leftRearJoint>
        <rightRearJoint>joint_wheel_BR</rightRearJoint>
        <wheelSeparation>0.16</wheelSeparation>
        <wheelDiameter>0.08</wheelDiameter>
        <robotBaseFrame>base_footprint</robotBaseFrame>
        <torque>20</torque>
        <commandTopic>cmd_vel</commandTopic>
    	<odometryTopic>odom</odometryTopic>
    	<odometryFrame>odom</odometryFrame>
    	<broadcastTF>1</broadcastTF>
    </plugin>
  </gazebo>

  <!--RGBD camera -->
  <gazebo reference="camera">
   <sensor type="depth" name="camera">
     <always_on>true</always_on>
     <visualize>false</visualize>
     <update_rate>15.0</update_rate>
     <camera name="front">
       <horizontal_fov>1.047197</horizontal_fov>
       <image>
         <!-- openni_kinect plugin works only with BGR8 -->
         <format>B8G8R8</format>
         <width>400</width>
         <height>300</height>
       </image>
       <clip>
         <near>0.01</near>
         <far>8</far>
       </clip>
     </camera>
     <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
       <baseline>0.1</baseline>
       <alwaysOn>true</alwaysOn>
       <updateRate>15.0</updateRate>
       <cameraName>camera</cameraName>
       <imageTopicName>/camera/rgb/image_raw</imageTopicName>
       <cameraInfoTopicName>/camera/rgb/camera_info</cameraInfoTopicName>
       <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
       <depthImageCameraInfoTopicName>/camera/depth_registered/camera_info</depthImageCameraInfoTopicName>
       <pointCloudTopicName>/camera/depth_registered/points</pointCloudTopicName>
       <frameName>camera_depth_optical_frame</frameName>
       <pointCloudCutoff>0.35</pointCloudCutoff>
       <pointCloudCutoffMax>4.5</pointCloudCutoffMax>
       <CxPrime>0</CxPrime>
       <Cx>0</Cx>
       <Cy>0</Cy>
       <focalLength>0</focalLength>
       <hackBaseline>0</hackBaseline>
     </plugin>
   </sensor>
  </gazebo>

 <!-- hokuyo -->
  <gazebo reference="hokuyo">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/slam_bot/laser/scan</topicName>
        <frameName>hokuyo</frameName>
      </plugin>
    </sensor>
  </gazebo>
</robot>
